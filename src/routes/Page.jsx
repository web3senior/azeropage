import { useEffect, useState } from 'react'
import { web3Enable, web3Accounts } from '@polkadot/extension-dapp'
import { getPage } from '../util/api'
import { useAuth } from '../contexts/AuthContext'
import styles from './Page.module.scss'

function App() {
  const [extensions, setExtensions] = useState()
  const [accounts, setAccounts] = useState()
  const [page, setPage] = useState()
  const auth = useAuth()

  const loadAccountsFromExtensions = async () => {
    // extension-dapp API: connect to extensions; returns list of injected extensions
    const injectedExtensions = await web3Enable('Azeropage')
    setExtensions(injectedExtensions)

    // extension-dapp API: get accounts from extensions filtered by name
    const accounts = await web3Accounts({ extensions: ['aleph-zero-signer'] })
    setAccounts(accounts)
  }

  useEffect(() => {
    getPage(auth.accounts[0].address).then((result) => {
      console.log(result)
      setPage(result)
    })
  }, [])

  return (
    <>
      <article className={`${styles.container} d-flex flex-column align-items-center justify-content-start text-center`}>
        <svg width="104" height="104" viewBox="0 0 104 104" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect width="104" height="104" rx="52" fill="white" />
          <path
            d="M51.9999 27.8572L43.9523 35.9048L35.9047 27.8572L43.9523 19.8096L51.9999 27.8572ZM60.0475 35.9048L51.9999 27.8572L60.0475 19.8096L68.0952 27.8572L60.0475 35.9048ZM51.9999 76.1429L60.0475 68.0953L68.0952 76.1429L60.0475 84.1905L51.9999 76.1429ZM43.9523 68.0953L51.9999 76.1429L43.9523 84.1905L35.9047 76.1429L43.9523 68.0953ZM35.9047 43.9524L27.8571 52L19.8094 43.9524L27.8571 35.9048L35.9047 43.9524ZM76.1428 52L68.0952 43.9524L76.1428 35.9048L84.1904 43.9524L76.1428 52ZM68.0952 60.0477L76.1428 52L84.1904 60.0477L76.1428 68.0953L68.0952 60.0477ZM27.8571 52L35.9047 60.0477L27.8571 68.0953L19.8094 60.0477L27.8571 52Z"
            fill="#A8385C"
          />
          <path
            d="M22.5333 27.8572C22.5333 27.1499 22.6726 26.4496 22.9433 25.7962C23.2139 25.1428 23.6107 24.549 24.1108 24.0489C24.6109 23.5488 25.2046 23.1521 25.858 22.8815C26.5114 22.6108 27.2118 22.4715 27.919 22.4715C28.6263 22.4715 29.3266 22.6108 29.9801 22.8815C30.6335 23.1521 31.2272 23.5488 31.7273 24.0489C32.2274 24.549 32.6241 25.1428 32.8948 25.7962C33.1654 26.4496 33.3048 27.1499 33.3048 27.8572C33.3048 28.5645 33.1654 29.2648 32.8948 29.9182C32.6241 30.5717 32.2274 31.1654 31.7273 31.6655C31.2272 32.1656 30.6335 32.5623 29.9801 32.833C29.3266 33.1036 28.6263 33.2429 27.919 33.2429C27.2118 33.2429 26.5114 33.1036 25.858 32.833C25.2046 32.5623 24.6109 32.1656 24.1108 31.6655C23.6107 31.1654 23.2139 30.5717 22.9433 29.9182C22.6726 29.2648 22.5333 28.5645 22.5333 27.8572ZM70.819 27.8572C70.819 27.1499 70.9583 26.4496 71.229 25.7962C71.4997 25.1428 71.8964 24.549 72.3965 24.0489C72.8966 23.5488 73.4903 23.1521 74.1437 22.8815C74.7971 22.6108 75.4975 22.4715 76.2048 22.4715C76.912 22.4715 77.6123 22.6108 78.2658 22.8815C78.9192 23.1521 79.5129 23.5488 80.013 24.0489C80.5131 24.549 80.9098 25.1428 81.1805 25.7962C81.4512 26.4496 81.5905 27.1499 81.5905 27.8572C81.5905 28.5645 81.4512 29.2648 81.1805 29.9182C80.9098 30.5717 80.5131 31.1654 80.013 31.6655C79.5129 32.1656 78.9192 32.5623 78.2658 32.833C77.6123 33.1036 76.912 33.2429 76.2048 33.2429C75.4975 33.2429 74.7971 33.1036 74.1437 32.833C73.4903 32.5623 72.8966 32.1656 72.3965 31.6655C71.8964 31.1654 71.4997 30.5717 71.229 29.9182C70.9583 29.2648 70.819 28.5645 70.819 27.8572ZM70.819 76.1429C70.819 75.4357 70.9583 74.7353 71.229 74.0819C71.4997 73.4285 71.8964 72.8348 72.3965 72.3347C72.8966 71.8345 73.4903 71.4378 74.1437 71.1672C74.7971 70.8965 75.4975 70.7572 76.2048 70.7572C76.912 70.7572 77.6123 70.8965 78.2658 71.1672C78.9192 71.4378 79.5129 71.8345 80.013 72.3347C80.5131 72.8348 80.9098 73.4285 81.1805 74.0819C81.4512 74.7353 81.5905 75.4357 81.5905 76.1429C81.5905 76.8502 81.4512 77.5505 81.1805 78.2039C80.9098 78.8574 80.5131 79.4511 80.013 79.9512C79.5129 80.4513 78.9192 80.848 78.2658 81.1187C77.6123 81.3893 76.912 81.5286 76.2048 81.5286C75.4975 81.5286 74.7971 81.3893 74.1437 81.1187C73.4903 80.848 72.8966 80.4513 72.3965 79.9512C71.8964 79.4511 71.4997 78.8574 71.229 78.2039C70.9583 77.5505 70.819 76.8502 70.819 76.1429ZM22.5333 76.1429C22.5333 75.4357 22.6726 74.7353 22.9433 74.0819C23.2139 73.4285 23.6107 72.8348 24.1108 72.3347C24.6109 71.8345 25.2046 71.4378 25.858 71.1672C26.5114 70.8965 27.2118 70.7572 27.919 70.7572C28.6263 70.7572 29.3266 70.8965 29.9801 71.1672C30.6335 71.4378 31.2272 71.8345 31.7273 72.3347C32.2274 72.8348 32.6241 73.4285 32.8948 74.0819C33.1654 74.7353 33.3048 75.4357 33.3048 76.1429C33.3048 76.8502 33.1654 77.5505 32.8948 78.2039C32.6241 78.8574 32.2274 79.4511 31.7273 79.9512C31.2272 80.4513 30.6335 80.848 29.9801 81.1187C29.3266 81.3893 28.6263 81.5286 27.919 81.5286C27.2118 81.5286 26.5114 81.3893 25.858 81.1187C25.2046 80.848 24.6109 80.4513 24.1108 79.9512C23.6107 79.4511 23.2139 78.8574 22.9433 78.2039C22.6726 77.5505 22.5333 76.8502 22.5333 76.1429ZM35.9048 35.9048H52V43.9524H35.9048V35.9048ZM35.9048 43.9524H43.9524V52.0001H35.9048V43.9524ZM52 43.9524L43.9524 52.0001V43.9524H52ZM68.0952 35.9048V52.0001H60.0476V35.9048H68.0952ZM60.0476 35.9048V43.9524H52V35.9048H60.0476ZM60.0476 52.0001L52 43.9524H60.0476V52.0001ZM68.0952 68.0953H52V60.0477H68.0952V68.0953ZM68.0952 60.0477H60.0476V52.0001H68.0952V60.0477ZM52 60.0477L60.0476 52.0001V60.0477H52ZM35.9048 68.0953V52.0001H43.9524V68.0953H35.9048ZM43.9524 68.0953V60.0477H52V68.0953H43.9524ZM43.9524 52.0001L52 60.0477H43.9524V52.0001Z"
            fill="#D17593"
          />
        </svg>

        <div>
          <strong>{page && page.length > 0 && `${page[0].username}`}</strong>
          <h6>{page && page.length > 0 && page[0].name}</h6>
          <input type="text" name="bio" defaultValue={page && page.length > 0 && page[0].bio} />
        </div>

        <div className="mt-20">
          <ul>
            {page &&
              page.length > 0 &&
              JSON.parse(page[0].links) !== null &&
              JSON.parse(page[0].links).map(({ name, url }, i) => (
                <li key={i}>
                  <a href={url} target="_blank">
                    <div className="card">{name}</div>
                  </a>
                </li>
              ))}
          </ul>
        </div>
      </article>
    </>
  )
}

export default App
